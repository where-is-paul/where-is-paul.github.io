<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paul Liu</title>
    <link>//localhost:1313/</link>
    <description>Recent content on Paul Liu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Procrastinating since &#39;92.</copyright>
    <lastBuildDate>Wed, 27 May 2015 12:28:12 -0700</lastBuildDate><atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>7 common mistakes in Go – GopherFest 2015</title>
      <link>//localhost:1313/teaching/7-common-mistakes-in-go-2015/</link>
      <pubDate>Wed, 27 May 2015 12:28:12 -0700</pubDate>
      
      <guid>//localhost:1313/teaching/7-common-mistakes-in-go-2015/</guid>
      <description>Given at GopherFest 2015. This is an updated version of the talk I gave in NYC Nov 14 at GothamGo.
“We need to think about failure differently. Most people think mistakes are a necessary evil. Mistakes aren&amp;rsquo;t a necessary evil, they aren&amp;rsquo;t evil at all. They are an inevitable consequence of doing something new and as such should be seen as valuable. “ - Ed Catmull
As Go is a &amp;ldquo;new&amp;rdquo; programming language we are all experimenting and learning how to write better Go.</description>
    </item>
    
    <item>
      <title>7 Common mistakes in Go and when to avoid them – Gotham Go</title>
      <link>//localhost:1313/teaching/7-biggest-mistakes-in-go/</link>
      <pubDate>Tue, 18 Nov 2014 14:06:00 -0500</pubDate>
      
      <guid>//localhost:1313/teaching/7-biggest-mistakes-in-go/</guid>
      <description>Not a generic list of programming mistakes, these are the lessons I wish I learned earlier while developing Go. I&amp;rsquo;ve spent the past two years developing some of the most popular libraries and applications written in Go. I&amp;rsquo;ve also made a lot of mistakes along the way. Recognizing that &amp;ldquo;The only real mistake is the one from which we learn nothing. -John Powell&amp;rdquo;, I would like to share with you the mistakes that I have made over my journey with Go and when you can avoid them.</description>
    </item>
    
    <item>
      <title>Hugo: A fast and flexible static site generator built in GoLang</title>
      <link>//localhost:1313/project/hugo/</link>
      <pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/project/hugo/</guid>
      <description>&amp;lt;img src=&amp;quot;/media/hugo.png&amp;quot; alt=&amp;quot;Hugo Website&amp;quot; /&amp;gt; &amp;lt;figcaption&amp;gt; &amp;lt;p&amp;gt; Hugo Website &amp;lt;/p&amp;gt; &amp;lt;/figcaption&amp;gt;  Hugo is a static site generator written in Go. It is optimized for speed, easy use and configurability. Hugo takes a directory with content and templates and renders them into a full html website.
Hugo makes use of markdown files with front matter for meta data.
Written in GoLang for speed, Hugo is significantly faster than most other static site generators.</description>
    </item>
    
    <item>
      <title>MongoDB Driver days hackathon round up</title>
      <link>//localhost:1313/papers/10gen-driver-days-mongodb-hack-a-thon/</link>
      <pubDate>Fri, 16 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/papers/10gen-driver-days-mongodb-hack-a-thon/</guid>
      <description>Two times a year the drivers team at 10gen gathers together for a face to face meeting to spend time together working on issues and setting forth our goals for the upcoming six months. In September 2012 we all converged on New York City for the second ever driver days. This time we split up into teams for a hack-a-thon. As maintainers of drivers &amp;amp; integrations in over a dozen different languages while we are on the same team, it isn’t often that we actually work together on the same codebase.</description>
    </item>
    
    <item>
      <title>7 security practices you need to follow</title>
      <link>//localhost:1313/post/7-security-practices-you-need-to-follow/</link>
      <pubDate>Tue, 22 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/post/7-security-practices-you-need-to-follow/</guid>
      <description>&amp;lt;img src=&amp;quot;/media/usbkey.jpg&amp;quot; /&amp;gt;  Some of this may seem like a broken record, yet every single time you hear about a bank losing millions of customer data, or a company having a security breach they consistently have failed to implement and enforce the most basic security practices. Here are 7 simple security practices that you cannot afford to not follow.
1. Secure pass phrases Throw away the notion of a password.</description>
    </item>
    
  </channel>
</rss>
